// Code generated by MockGen. DO NOT EDIT.
// Source: proxy.go
//
// Generated by this command:
//
//	mockgen -source=proxy.go -destination=proxy_mock.go -package proxy
//

// Package proxy is a generated GoMock package.
package proxy

import (
	reflect "reflect"

	process "github.com/bibendi/gruf-relay/internal/process"
	gomock "go.uber.org/mock/gomock"
)

// MockBalancer is a mock of Balancer interface.
type MockBalancer struct {
	ctrl     *gomock.Controller
	recorder *MockBalancerMockRecorder
	isgomock struct{}
}

// MockBalancerMockRecorder is the mock recorder for MockBalancer.
type MockBalancerMockRecorder struct {
	mock *MockBalancer
}

// NewMockBalancer creates a new mock instance.
func NewMockBalancer(ctrl *gomock.Controller) *MockBalancer {
	mock := &MockBalancer{ctrl: ctrl}
	mock.recorder = &MockBalancerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalancer) EXPECT() *MockBalancerMockRecorder {
	return m.recorder
}

// Next mocks base method.
func (m *MockBalancer) Next() process.Process {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Next")
	ret0, _ := ret[0].(process.Process)
	return ret0
}

// Next indicates an expected call of Next.
func (mr *MockBalancerMockRecorder) Next() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Next", reflect.TypeOf((*MockBalancer)(nil).Next))
}
