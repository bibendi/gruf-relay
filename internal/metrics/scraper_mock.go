// Code generated by MockGen. DO NOT EDIT.
// Source: scraper.go
//
// Generated by this command:
//
//	mockgen -source=scraper.go -destination=scraper_mock.go -package=metrics
//

// Package metrics is a generated GoMock package.
package metrics

import (
	reflect "reflect"

	worker "github.com/bibendi/gruf-relay/internal/worker"
	gomock "go.uber.org/mock/gomock"
)

// MockManager is a mock of Manager interface.
type MockManager struct {
	ctrl     *gomock.Controller
	recorder *MockManagerMockRecorder
	isgomock struct{}
}

// MockManagerMockRecorder is the mock recorder for MockManager.
type MockManagerMockRecorder struct {
	mock *MockManager
}

// NewMockManager creates a new mock instance.
func NewMockManager(ctrl *gomock.Controller) *MockManager {
	mock := &MockManager{ctrl: ctrl}
	mock.recorder = &MockManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockManager) EXPECT() *MockManagerMockRecorder {
	return m.recorder
}

// GetWorkers mocks base method.
func (m *MockManager) GetWorkers() map[string]worker.Worker {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWorkers")
	ret0, _ := ret[0].(map[string]worker.Worker)
	return ret0
}

// GetWorkers indicates an expected call of GetWorkers.
func (mr *MockManagerMockRecorder) GetWorkers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWorkers", reflect.TypeOf((*MockManager)(nil).GetWorkers))
}
